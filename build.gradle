plugins {
    id 'java'
    id 'java-library'
    id "com.vanniktech.maven.publish" version "0.31.0" apply false
}

import com.vanniktech.maven.publish.JavaLibrary
import com.vanniktech.maven.publish.JavadocJar


ext {
    libs = [
            jsonSmart      : 'net.minidev:json-smart:2.5.1',
            slf4jApi       : 'org.slf4j:slf4j-api:2.0.11',
            gson           : 'com.google.code.gson:gson:2.10.1',
            hamcrest       : 'org.hamcrest:hamcrest:2.2',
            jacksonDatabind: 'com.fasterxml.jackson.core:jackson-databind:2.16.1',
            jettison       : 'org.codehaus.jettison:jettison:1.5.4',
            jsonOrg        : 'org.json:json:20231013',
            tapestryJson   : 'org.apache.tapestry:tapestry-json:5.8.3',
            jakartaJsonP   : 'jakarta.json:jakarta.json-api:2.0.2',
            jakartaJsonB   : 'jakarta.json.bind:jakarta.json.bind-api:2.0.0',

            test           : [
                    'commons-io:commons-io:2.15.0',
                    'org.junit.jupiter:junit-jupiter:5.10.1',
                    'org.assertj:assertj-core:3.25.1',
                    'org.hamcrest:hamcrest:2.2',
                    'org.glassfish:jakarta.json:2.0.1',
                    'org.eclipse:yasson:2.0.4',
                    'org.slf4j:slf4j-simple:2.0.9',
                    'com.google.code.gson:gson:2.10.1',
                    'org.hamcrest:hamcrest:2.2',
                    'com.fasterxml.jackson.core:jackson-databind:2.16.1',
                    'org.codehaus.jettison:jettison:1.5.4',
                    'org.json:json:20231013',
                    'org.apache.tapestry:tapestry-json:5.8.3',
                    'jakarta.json:jakarta.json-api:2.0.2',
                    'jakarta.json.bind:jakarta.json.bind-api:2.0.0'

            ]
    ]
    snapshotVersion = false
}

allprojects {
    ext.displayName = null
    ext.buildTimestamp = new Date().format('yyyy-MM-dd HH:mm:ss')

    group = 'com.jayway.jsonpath'
    version = '2.10.1' + (snapshotVersion ? "-SNAPSHOT" : "")

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.vanniktech.maven.publish'
    apply plugin: 'java-library'
    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    javadoc {
        if (JavaVersion.current().isJava8Compatible()) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }

        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    mavenPublishing {
        group = 'io.github.sonus21'
        publishToMavenCentral(com.vanniktech.maven.publish.SonatypeHost.CENTRAL_PORTAL)
        signAllPublications()
        configure(new JavaLibrary(new JavadocJar.Javadoc(), true))

        pom {
            name = project.name
            description = 'A library to query, verify and transform JSON'
            url = 'https://github.com/sonus21/JsonPath'

            licenses {
                license {
                    name = "The Apache Software License, Version 2.0"
                    url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    distribution = "repo"
                }
            }

            scm {
                url = 'scm:git:git://github.com/jayway/JsonPath.git'
                connection = 'scm:git:git://github.com/jayway/JsonPath.git'
                developerConnection = 'scm:git:git://github.com/jayway/JsonPath.git'
            }

            developers {
                developer {
                    id = 'kalle.stenflo'
                    name = 'Kalle Stenflo'
                    email = 'kalle.stenflo (a) gmail.com'
                }
            }
        }
    }
}


wrapper {
    gradleVersion = '8.5'
}

